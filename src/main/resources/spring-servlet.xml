<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!--静态文件映射-->
	<!--** 代表静态资源文件下的文件夹及文件-->
	<mvc:resources mapping="/statics/**" location="/statics/" />
	<mvc:annotation-driven/>
	
	<!--&lt;!&ndash; 完成请求和注解POJO的映射 &ndash;&gt;
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />-->

	<!-- 装配controller - 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.demo.sl.controller"/>
    	<!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>-->
	<!--json相关配置-->
	<bean
			class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>
	<bean
			class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
<!--
	&lt;!&ndash; 对转向页面的路径解析。prefix：前缀， suffix：后缀 &ndash;&gt;
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/pages/" p:suffix=".jsp" />
-->

	<!--&lt;!&ndash; 支持上传文件 &ndash;&gt;
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>-->
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<!--配置拦截器-->
<!--	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/login.html"/>
			<mvc:exclude-mapping path="/statics/**"/>
			<bean class="org.slsale.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>-->

<!--	<mvc:interceptors>
	  <mvc:interceptor>
	    <mvc:mapping path="/backend/**" />
	    <mvc:mapping path="/informanage/**" />
	    <mvc:mapping path="/member/**" />
	    <mvc:mapping path="/message/**" />
	    <bean class="org.slsale.interceptor.SysInterceptor">
	    </bean>
	  </mvc:interceptor>
	</mvc:interceptors>-->

	<!-- 放行静态资源-->
	<!--为了不影响正常的服务处理-->
	<mvc:annotation-driven/>
	<!-- 将静态资源交给tomcat-->
	<mvc:default-servlet-handler/>
</beans> 